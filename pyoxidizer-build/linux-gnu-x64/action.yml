name: "pyoxidizer-build-linux-gnu-x64"
description: "Build project with pyoxidizer on linux gnu x64. Code has to be checked out."

inputs:
  app-name:
    description: ""
    required: true

  run-command:
    description: ""
    required: true

  artifact-name:
    description: "Name of the artifact, where the built file should be uploaded"
    required: true

  use-own-pyoxidizer-config:
    description: "Use own pyoxidizer.bzl, given in the project folder if true, otherwise use standard config provided by this action"
    required: false
    default: 'false'


runs:
  using: "composite"
  steps:  

    - name: Install pyoxidizer
      run: pip install pyoxidizer
      shell: bash

    - name: Setup poetry
      id: setup-poetry
      uses: henningwoehr/actions/setup-poetry@main
      with:
        python-version: "3.10"
        poetry-version: "1.1.14"

    - name: Generate requirements.txt
      run: poetry export --without-hashes > requirements.txt
      shell: bash

    - if: inputs.use-own-pyoxidizer-config == 'false'
      name: Get pyoxidizer build file
      run: curl https://raw.githubusercontent.com/henningWoehr/actions/main/pyoxidizer-build/pyoxidizer.bzl > pyoxidizer.bzl
      shell: bash

    - if: inputs.use-own-pyoxidizer-config == 'false'
      name: Build executable with pyoxidizer
      run: pyoxidizer build exe --release --var app_name ${{ inputs.app-name }} --var run_command "${{ inputs.run-command }}"
      shell: bash

    - if: inputs.use-own-pyoxidizer-config == 'true'
      name: Build executable with pyoxidizer
      run: pyoxidizer build exe --release
      shell: bash

    - name: Strip and zip executable
      run: |
        strip ./build/x86_64-unknown-linux-gnu/release/exe/encryptiontoolcli
        mkdir built_file
        zip -j built_file/linux_gnu_x64_exe.zip ./build/x86_64-unknown-linux-gnu/release/exe/*
      shell: bash

    - name: Upload built file
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.artifact-name }}
        path: built_file/